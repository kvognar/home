p#notice = notice
.media-data
  .text-center
    h1= @media_work.title
    h4
      .badges= render partial: 'badges/badges', locals: { badges: @badges, media_work: @media_work }
      = @media_work.medium.humanize
      - if @media_work.perennial?
        .media-icon title= "This #{@media_work.medium.humanize.downcase} is evergreen"
          = svg('icons/perennial')

  .media-work-info
	div
	  div
        - if @media_work.media_creators.present?
          h4 Creators
          = @media_work.media_creators.map { |creator| link_to(creator.name, media_creator_path(creator)) }.join(' • ').html_safe
      div
        - if @media_work.media_tags.present?
          h4 Tags
          = @media_work.media_tags.map { |tag| link_to(tag.name, media_works_path(tags: [tag.name])) }.join(' • ').html_safe
    div
      - if @media_work.media_image
        a data-featherlight=@media_work.media_image.image.url(:medium)
          = image_tag(@media_work.media_image.image.url(:medium), class: 'media-work-cover-image')
  - if signed_in? && (@media_work.recommended_by.present? || @media_work.recommended_because.present?)
  div.text-center
    - if @media_work.recommended_by.present?
      p
        = "Recommended by: #{@media_work.recommended_by}"
    - if @media_work.recommended_because.present?
      p
        = "Recommended because: #{@media_work.recommended_because}"


  - if @media_work.media_consumptions.any? { |consumption| consumption.media_sessions.any?(&:has_spoilers?) }
    .text-center= button_tag 'Show spoilers', class: 'spoiler-toggle'
- @media_work.media_consumptions.each do |consumption|
  .consumption-log
    = render partial: 'consumption', locals: { consumption: consumption }

- if @media_work.media_consumptions.last&.finished? || @media_work.media_consumptions.blank?
  .text-center
    = button_to 'One more time', media_consumptions_path, method: :post, params: { media_work_id: @media_work.id, revisiting: true }, data: { confirm: 'Ready to go again?'}



nav
  - if admin?
    => link_to 'Edit', edit_media_work_path(@media_work)
    '|
  =< link_to 'Back', media_works_path
